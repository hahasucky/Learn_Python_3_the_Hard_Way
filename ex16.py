# -*- coding: utf-8 -*-
from sys import argv # sys라는 모듈 꾸러미에서 argv이라는 모듈을 가져와라.

스크립트, 파일_이름 = argv # 스크립트 실행시에 인풋받은 파일이름, 스크립트 이름을 왼쪽 변수에 언팩해라

print(f"{파일_이름} 파일을 지우려합니다.") # 포맷 문자열에 방금 언팩해서 지정받은 파일이름을 넣어 출력
print("취소하려면 CTRL-C (^C) 를 누그세요.") # CLI 에서 input()을 받고 있을 때 control + c 를 넣으면 유저 인터럽트 된다.
print("진행하려면 리턴키를 누르세요.")

input("?") # 위의 설명을 유저가 보았으니, 지우려면 엔터를 누를 터이다.

print("파일 여는 중...") # 여는 중에서 지웁니다 까지 ... 몇초도 안걸리니까 좀 어색하다. 그냥 동시에 낯타남,,, 중간에 일부러 버퍼를 넣고 광고를 넣는구나 .... ㅋㅋㅋㅋ착한놈들
목적지 = open(파일_이름, 'w', encoding = 'utf-8') # 스크립트 옆에 인풋받은 파일을 writing 모드로, utf 인코딩 한다는 조건하에, 파일 오브젝트를 받는다.

print("파일 내용을 지웁니다. 안녕히!") # 지운다고 말은 해준다.
목적지.truncate() # 이미 지워졌는데 만약에 'a' 였다면 이걸 써줘야 지워지겠지,, 그 파일안의 내용들.

print("이제 세 줄에 들어갈 내용을 써주세요.") # 라이팅, utf-8 모드로 열어진 파일 오브젝트에 write()를 해준다.

줄1 = input("1번째 줄: ") # 내용을 인풋 함수로 받아준다.
줄2 = input("2번째 줄: ")
줄3 = input("3번째 줄: ")

#목적지.write(줄1) #write 는 기본적으로 공백문자없이 계속 써지는 구나 ^^
#목적지.write("\n") # 의문 : file object ( writing mode, utf-8 ) 에 write("내용") 으로 쓰는데, 쓸 데 마다,
#목적지.write(줄2) # 띄어쓰기나 \n을 써줘야하니 이상하군. 텍스트는 대부분 줄마다 띄워져 있는데 ... 적어도 띄워쓰기라도 하던지. 먼가 개체를 받을 때마다 디폴트로 \n 이나 \s 처리를 해주는 실행인자가, 위에 파일오브젝트 여는 오픈 함수에 세팅이 가능할 거 같아.
#목적지.write("\n")
#목적지.write(줄3)
#목적지.write("\n")

목적지.write("{}\n{}\n{}\n".format(줄1,줄2,줄3))

print("이제 닫을게용!!.")
목적지.close() # 파일 변경 내용 저장 후 닫기 !!
